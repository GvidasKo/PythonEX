import threading
import logging
import time
import concurrent.futures
import queue

l = logging.getLogger("Kepykla")
h = logging.StreamHandler()
f = logging.Formatter("%(asctime)s: %(levelname)s!!! %(message)s")
h.setFormatter(f)
l.addHandler(h)
l.setLevel(logging.INFO)

class Kepykla:
    def __init__(self):
        self.storage = queue.Queue()


    def kepejas(self):
        for i in range(1, 15):
            self.storage.put(f"Bandeles: {i}")
            l.info(f"iskeptu bandeliu: {i}")
            time.sleep(0.1)
        l.info(f"Kepykloje yra {self.storage}")

    def pirkejas(self):
        for i in range(10):
            paimtos_bandeles = self.storage.get()
            l.info(f"Pirkejas {paimtos_bandeles}")
            time.sleep(0.2)

if __name__ == "__main__":
    kepykla = Kepykla()
    with concurrent.futures.ThreadPoolExecutor(max_workers=3) as executor:
        executor.submit(kepykla.pirkejas)
        executor.submit(kepykla.kepejas)
        executor.submit(kepykla.pirkejas)
